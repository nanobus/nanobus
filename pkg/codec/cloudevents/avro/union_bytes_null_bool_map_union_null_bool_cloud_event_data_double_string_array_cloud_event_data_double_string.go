// Code generated by github.com/actgardner/gogen-avro/v10. DO NOT EDIT.
/*
 * SOURCE:
 *     spec.avsc
 */
package avro

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/actgardner/gogen-avro/v10/compiler"
	"github.com/actgardner/gogen-avro/v10/vm"
	"github.com/actgardner/gogen-avro/v10/vm/types"
)

type UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum int

const (
	UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumBytes UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum = 0

	UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumBool UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum = 2

	UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumMapUnionNullBoolCloudEventDataDoubleString UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum = 3

	UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumArrayCloudEventData UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum = 4

	UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumDouble UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum = 5

	UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumString UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum = 6
)

type UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString struct {
	Bytes                                      Bytes
	Null                                       *types.NullVal
	Bool                                       bool
	MapUnionNullBoolCloudEventDataDoubleString map[string]*UnionNullBoolCloudEventDataDoubleString
	ArrayCloudEventData                        []CloudEventData
	Double                                     float64
	String                                     string
	UnionType                                  UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum
}

func writeUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString(r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString, w io.Writer) error {

	if r == nil {
		err := vm.WriteLong(1, w)
		return err
	}

	err := vm.WriteLong(int64(r.UnionType), w)
	if err != nil {
		return err
	}
	switch r.UnionType {
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumBytes:
		return vm.WriteBytes(r.Bytes, w)
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumBool:
		return vm.WriteBool(r.Bool, w)
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumMapUnionNullBoolCloudEventDataDoubleString:
		return writeMapUnionNullBoolCloudEventDataDoubleString(r.MapUnionNullBoolCloudEventDataDoubleString, w)
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumArrayCloudEventData:
		return writeArrayCloudEventData(r.ArrayCloudEventData, w)
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumDouble:
		return vm.WriteDouble(r.Double, w)
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumString:
		return vm.WriteString(r.String, w)
	}
	return fmt.Errorf("invalid value for *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString")
}

func NewUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString() *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString {
	return &UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString{}
}

func (r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) Serialize(w io.Writer) error {
	return writeUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString(r, w)
}

func DeserializeUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString(r io.Reader) (*UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString, error) {
	t := NewUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString()
	deser, err := compiler.CompileSchemaBytes([]byte(t.Schema()), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func DeserializeUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringFromSchema(r io.Reader, schema string) (*UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString, error) {
	t := NewUnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString()
	deser, err := compiler.CompileSchemaBytes([]byte(schema), []byte(t.Schema()))
	if err != nil {
		return t, err
	}

	err = vm.Eval(r, deser, t)

	if err != nil {
		return t, err
	}
	return t, err
}

func (r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) Schema() string {
	return "[\"bytes\",\"null\",\"boolean\",{\"type\":\"map\",\"values\":[\"null\",\"boolean\",{\"doc\":\"Representation of a JSON Value\",\"fields\":[{\"name\":\"value\",\"type\":{\"type\":\"map\",\"values\":[\"null\",\"boolean\",{\"type\":\"map\",\"values\":\"io.cloudevents.CloudEventData\"},{\"items\":\"io.cloudevents.CloudEventData\",\"type\":\"array\"},\"double\",\"string\"]}}],\"name\":\"CloudEventData\",\"type\":\"record\"},\"double\",\"string\"]},{\"items\":\"io.cloudevents.CloudEventData\",\"type\":\"array\"},\"double\",\"string\"]"
}

func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetBoolean(v bool) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetInt(v int32) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetFloat(v float32) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetDouble(v float64) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetBytes(v []byte) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetString(v string) {
	panic("Unsupported operation")
}

func (r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetLong(v int64) {

	r.UnionType = (UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnum)(v)
}

func (r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) Get(i int) types.Field {

	switch i {
	case 0:
		return &BytesWrapper{Target: (&r.Bytes)}
	case 1:
		return r.Null
	case 2:
		return &types.Boolean{Target: (&r.Bool)}
	case 3:
		r.MapUnionNullBoolCloudEventDataDoubleString = make(map[string]*UnionNullBoolCloudEventDataDoubleString)
		return &MapUnionNullBoolCloudEventDataDoubleStringWrapper{Target: (&r.MapUnionNullBoolCloudEventDataDoubleString)}
	case 4:
		r.ArrayCloudEventData = make([]CloudEventData, 0)
		return &ArrayCloudEventDataWrapper{Target: (&r.ArrayCloudEventData)}
	case 5:
		return &types.Double{Target: (&r.Double)}
	case 6:
		return &types.String{Target: (&r.String)}
	}
	panic("Unknown field index")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) NullField(i int) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) HintSize(i int) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) SetDefault(i int) {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) AppendMap(key string) types.Field {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) AppendArray() types.Field {
	panic("Unsupported operation")
}
func (_ *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) Finalize() {
}

func (r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) MarshalJSON() ([]byte, error) {

	if r == nil {
		return []byte("null"), nil
	}

	switch r.UnionType {
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumBytes:
		return json.Marshal(map[string]interface{}{"bytes": r.Bytes})
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumBool:
		return json.Marshal(map[string]interface{}{"boolean": r.Bool})
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumMapUnionNullBoolCloudEventDataDoubleString:
		return json.Marshal(map[string]interface{}{"map": r.MapUnionNullBoolCloudEventDataDoubleString})
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumArrayCloudEventData:
		return json.Marshal(map[string]interface{}{"array": r.ArrayCloudEventData})
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumDouble:
		return json.Marshal(map[string]interface{}{"double": r.Double})
	case UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleStringTypeEnumString:
		return json.Marshal(map[string]interface{}{"string": r.String})
	}
	return nil, fmt.Errorf("invalid value for *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString")
}

func (r *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString) UnmarshalJSON(data []byte) error {

	var fields map[string]json.RawMessage
	if err := json.Unmarshal(data, &fields); err != nil {
		return err
	}
	if len(fields) > 1 {
		return fmt.Errorf("more than one type supplied for union")
	}
	if value, ok := fields["bytes"]; ok {
		r.UnionType = 0
		return json.Unmarshal([]byte(value), &r.Bytes)
	}
	if value, ok := fields["boolean"]; ok {
		r.UnionType = 2
		return json.Unmarshal([]byte(value), &r.Bool)
	}
	if value, ok := fields["map"]; ok {
		r.UnionType = 3
		return json.Unmarshal([]byte(value), &r.MapUnionNullBoolCloudEventDataDoubleString)
	}
	if value, ok := fields["array"]; ok {
		r.UnionType = 4
		return json.Unmarshal([]byte(value), &r.ArrayCloudEventData)
	}
	if value, ok := fields["double"]; ok {
		r.UnionType = 5
		return json.Unmarshal([]byte(value), &r.Double)
	}
	if value, ok := fields["string"]; ok {
		r.UnionType = 6
		return json.Unmarshal([]byte(value), &r.String)
	}
	return fmt.Errorf("invalid value for *UnionBytesNullBoolMapUnionNullBoolCloudEventDataDoubleStringArrayCloudEventDataDoubleString")
}
