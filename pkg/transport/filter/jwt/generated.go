// Code generated by @apexlang/codegen. DO NOT EDIT.

package jwt

import (
	"github.com/nanobus/nanobus/pkg/transport/filter"
)

type JWTV1Config struct {
	RSAPublicKeyFile     *string `json:"rsaPublicKeyFile,omitempty" yaml:"rsaPublicKeyFile,omitempty" msgpack:"rsaPublicKeyFile,omitempty" mapstructure:"rsaPublicKeyFile"`
	RSAPublicKeyString   *string `json:"rsaPublicKeyString,omitempty" yaml:"rsaPublicKeyString,omitempty" msgpack:"rsaPublicKeyString,omitempty" mapstructure:"rsaPublicKeyString"`
	ECDSAPublicKeyFile   *string `json:"ecdsaPublicKeyFile,omitempty" yaml:"ecdsaPublicKeyFile,omitempty" msgpack:"ecdsaPublicKeyFile,omitempty" mapstructure:"ecdsaPublicKeyFile"`
	ECDSAPublicKeyString *string `json:"ecdsaPublicKeyString,omitempty" yaml:"ecdsaPublicKeyString,omitempty" msgpack:"ecdsaPublicKeyString,omitempty" mapstructure:"ecdsaPublicKeyString"`
	HMACSecretKeyFile    *string `json:"hmacSecretKeyFile,omitempty" yaml:"hmacSecretKeyFile,omitempty" msgpack:"hmacSecretKeyFile,omitempty" mapstructure:"hmacSecretKeyFile"`
	HMACSecretKeyBase64  bool    `json:"hmacSecretKeyBase64" yaml:"hmacSecretKeyBase64" msgpack:"hmacSecretKeyBase64" mapstructure:"hmacSecretKeyBase64"`
	HMACSecretKeyString  *string `json:"hmacSecretKeyString,omitempty" yaml:"hmacSecretKeyString,omitempty" msgpack:"hmacSecretKeyString,omitempty" mapstructure:"hmacSecretKeyString"`
	JWKSURL              *string `json:"jwksUrl,omitempty" yaml:"jwksUrl,omitempty" msgpack:"jwksUrl,omitempty" mapstructure:"jwksUrl"`
}

func JWTV1() (string, filter.Loader) {
	return "nanobus.filter.jwt/v1", JWTV1Loader
}
